* org-clock-sum and the time range parameters
   :PROPERTIES:
   :Time:     22:06
   :END:
Emacs function org-clock-sum has the following signature
#+BEGIN_SRC emacs-lisp
(defun org-clock-sum (&optional tstart tend headline-filter propname)
#+END_SRC
where "TSTART and TEND can mark a time range to be considered". So, what kind
of values are TSTART and TEND?

Looking at the implementation, you see that org-clock-sum converts these
parameters when they are string values:
#+BEGIN_SRC emacs-lisp
(if (stringp tstart) (setq tstart (org-time-string-to-seconds tstart)))
(if (stringp tend) (setq tend (org-time-string-to-seconds tend)))
#+END_SRC
So the first thing we can deduce from this is that TSTART and TEND can each
denote a time string that together denote the "time range to be considered".

org-time-string-to-seconds passes this time string to org-time-string-to-time,
which passes it to org-parse-time-string. The documentation of the latter
mentions that it parses "the standard Org-mode time string". A quick Google
search did not turn up a proper definition of this standard string. Some trial
and error seems to indicate that every string that contains a YYYY-MM-DD
substring is valid.

All this means that the yesterday's snippet can be simplified to
#+BEGIN_SRC emacs-lisp
(defun my-org-clock-sum-current-item ()
  "Return time, clocked on current item in total."
  (save-excursion
    (save-restriction
      (org-narrow-to-subtree)
      (org-clock-sum "2017-08-09" "2017-08-10"))))

(org-map-entries 'my-org-clock-sum-current-item "emacs" 'agenda)y
#+END_SRC

I do not think passing strings to org-clock-sum is the approach to take. In the
end we have to call org-clock-sum on subsequent days. Unless org-mode has some
functions to "increase" a time string by one day, this might be difficult using
strings.

Fortunately, org-clock-sum also seems to work with seconds. Once the time
strings are converted to seconds, the rest of org-clock-sum works with these
seconds. So probably we can just pass in TSTART and TEND as seconds.
