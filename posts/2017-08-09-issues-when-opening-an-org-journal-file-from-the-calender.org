   :PROPERTIES:
   :Time:     11:45
   :END:

org-journal registers all journal entries with the Emacs calendar, which can be
invoked through Emacs function calendar. In the calendar buffer, if you press
'j' on a day that has a journal entry, Emacs opens the journal file in a new
buffer.

When I visited the journal file through the calendar, I noticed that the buffer
was in read-only mode, even for the current day. To toggle that mode, use Emacs
function read-only-mode (bound to C-x C-q).

Then I noticed that the buffer was not in org-journal-mode. Inspection of
auto-mode-alist showed it an entry for journal files, but only for journal
files in their default directory (and I used another location).

I looked through the code of org-journal.el and saw that auto-mode-alist is
updated if you customize org-journal-dir:
#+BEGIN_SRC emacs-lisp
(defcustom org-journal-dir "~/Documents/journal/"
  :type 'string :group 'org-journal
  :set (lambda (symbol value)
         (set-default symbol value)
         (org-journal-update-auto-mode-alist)))
#+END_SRC
In my Emacs config I had changed the variable using setq, which apparently
bypasses the defined setter function. The following snippet shows how to
programmatically update org-journal-dir /and/ invoke the setter function:
#+BEGIN_SRC emacs-lisp
(custom-set-variables '(org-journal-dir "~/repos/bitbucket.org/journal/"))
#+END_SRC
One other thing, org-journal requires the value of org-journal-dir to end with
a slash as it just appends the regular expression for the journal files to this
value.
